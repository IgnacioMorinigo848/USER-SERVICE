type SuccessResponse {
  success: Boolean!
  message: String!
}

type FieldErrorsResponse {
  success: Boolean!
  errors: FieldErrors!
}

type FieldErrors {
  email: String
  nickName: String
  statusRegistration: String
  existNickName: Boolean 
}

type TokenResponse {
  success: Boolean!
  token: String!
}


type MessageResponse {
  success:Boolean!
  message:String!
}

type signInErrors{
  nickName:String
  email:String
  password:String
}

type signInResponse{
  success:Boolean!
  token:String
  errors:signInErrors
}

type NicknameSuggestionsResponse {
  success: Boolean!
  suggestions: [String!]
  message: String
}

union PreviousSignUpDataResponse = SuccessResponse | FieldErrorsResponse | TokenResponse

union codeValidatorResponse = SuccessResponse | TokenResponse

type updateProfileMessage{
  success:Boolean!
  message:String!
  url:String
}

type profileMessage{
  nickName:String!
  email:String!
  profileImage:String
}

type getProfileMessage{
  success:Boolean!
  profile:profileMessage
  message:String!
}

type Mutation {
  previousSignUpData(email: String!, nickName: String!): PreviousSignUpDataResponse!
  completedSignUpData(newPassword:String!): MessageResponse!
  signIn(nickName: String!, email:String! ,password: String!): signInResponse!
  codeValidator(receivedCode:String!):codeValidatorResponse!
  recoverAccount(newPassword:String!):MessageResponse!
  realeseAccount(email:String!):MessageResponse!
  updateProfile(url:String!): updateProfileMessage!
}

type Query {
  getCode(email:String!):MessageResponse!
  nicknameSuggestions(nickName: String!): NicknameSuggestionsResponse!
  getProfile:getProfileMessage!
}
